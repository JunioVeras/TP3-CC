apiVersion: v1
data:
  pyfile: "from typing import Any\nimport re\nfrom datetime import datetime, timedelta\n\ndef
    handler(input: dict, context: object) -> dict[str, float]:\n    bytes_sent = input[\"net_io_counters_eth0-bytes_sent\"]\n
    \   bytes_recv = input[\"net_io_counters_eth0-bytes_recv\"]\n    if bytes_sent
    + bytes_recv > 0:\n        percent_network_egress = (bytes_sent / (bytes_sent
    + bytes_recv)) * 100\n    else:\n        percent_network_egress = 0.0\n\n    memory_cached
    = input[\"virtual_memory-cached\"]\n    memory_buffers = input[\"virtual_memory-buffers\"]\n
    \   memory_total = input[\"virtual_memory-total\"]\n    if memory_total > 0:\n
    \       percent_memory_cache = ((memory_cached + memory_buffers) / memory_total)
    * 100\n    else:\n        percent_memory_cache = 0.0\n\n    cpu_utilization =
    [input[key] for key in input if key.startswith(\"cpu_percent-\")]\n    \n    if
    \"cpu_history\" not in context.env:\n        context.env[\"cpu_history\"] = {i:
    [] for i in range(len(cpu_utilization))}\n    \n    avg_cpu_utilization = {}\n
    \   date_format = \"%Y-%m-%d %H:%M:%S.%f\"\n    curTime = datetime.strptime(input[\"timestamp\"],
    date_format)\n\n    for i, utilization in enumerate(cpu_utilization):\n        context.env[\"cpu_history\"][i].append({\"time\":
    curTime, \"value\": utilization})\n        \n        while len(context.env[\"cpu_history\"][i])
    > 1:\n            if abs(context.env[\"cpu_history\"][i][-1][\"time\"] - context.env[\"cpu_history\"][i][0][\"time\"])
    > timedelta(minutes=1):\n                context.env[\"cpu_history\"][i].pop(0)\n
    \           else:\n                break\n\n        avg_cpu_utilization[f\"avg-util-cpu{i}-60sec\"]
    = sum(\n            entry[\"value\"] for entry in context.env[\"cpu_history\"][i]\n
    \       ) / len(context.env[\"cpu_history\"][i])\n\n    return {\n        \"percent-network-egress\":
    percent_network_egress,\n        \"percent-memory-cache\": percent_memory_cache,\n
    \       **avg_cpu_utilization\n    }\n"
kind: ConfigMap
metadata:
  creationTimestamp: "2025-01-04T21:17:43Z"
  name: pyfile
  namespace: juniolima
  resourceVersion: "11779839"
  uid: b5e6fe91-9669-4180-b88a-24c1e595fbca
